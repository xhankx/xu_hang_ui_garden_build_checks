{"version":3,"file":"components-Dropdown-Dropdown-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAEA;AAGA;AAjBA;AAmBA","sources":["webpack://@MaryamGambo/react-component-library/./src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { type DropdownProps } from './Dropdown.types';\r\n\r\nconst StyledDropdown = styled.select<DropdownProps>`\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n  color: #000;\r\n  cursor: ${(props) =>\r\n    props.disabled !== undefined && props.disabled ? 'not-allowed' : 'pointer'};\r\n  opacity: ${(props) =>\r\n    props.disabled !== undefined && props.disabled ? 0.5 : 1};\r\n  background-color: ${(props) =>\r\n    props.disabled !== undefined && props.disabled\r\n      ? '#cccccc'\r\n      : props.backgroundColor};\r\n  pointer-events: ${(props) =>\r\n    props.disabled !== undefined && props.disabled ? 'none' : 'auto'};\r\n`;\r\n\r\nconst Dropdown: React.FC<DropdownProps> = (props) => {\r\n  const { options, defaultValue, backgroundColor, disabled } = props;\r\n\r\n  return (\r\n    <StyledDropdown\r\n      defaultValue={defaultValue}\r\n      backgroundColor={backgroundColor}\r\n      disabled={disabled}\r\n      {...props}\r\n    >\r\n      {options.map((option) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </StyledDropdown>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"names":[],"sourceRoot":""}