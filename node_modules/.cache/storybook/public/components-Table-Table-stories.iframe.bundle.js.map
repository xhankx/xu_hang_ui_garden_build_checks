{"version":3,"file":"components-Table-Table-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAIA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;AAnBA;AAqBA","sources":["webpack://@MaryamGambo/react-component-library/./src/components/Table/Table.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { type TableProps } from './Table.types';\r\n\r\nconst StyledTable = styled.table<TableProps>`\r\n  width: 50%;\r\n  border-collapse: collapse;\r\n  border: 1px solid #ccc;\r\n  th,\r\n  td {\r\n    border: 1px solid #ccc;\r\n    padding: 8px;\r\n  }\r\n  background-color: ${(props) =>\r\n    props.disabled !== undefined && props.disabled\r\n      ? '#cccccc'\r\n      : props.backgroundColor};\r\n  cursor: ${(props) =>\r\n    props.disabled !== undefined && props.disabled ? 'not-allowed' : 'default'};\r\n  opacity: ${(props) =>\r\n    props.disabled !== undefined && props.disabled ? 0.5 : 1};\r\n  background-color: ${(props) =>\r\n    props.disabled !== undefined && props.disabled\r\n      ? '#cccccc'\r\n      : props.backgroundColor};\r\n  pointer-events: ${(props) =>\r\n    props.disabled !== undefined && props.disabled ? 'none' : 'auto'};\r\n`;\r\n\r\nconst TableHeader: React.FC<{ header?: string }> = ({ header }) => (\r\n  <thead>\r\n    <tr>\r\n      <th>{header}</th>\r\n    </tr>\r\n  </thead>\r\n);\r\n\r\nconst TableRow: React.FC<{ cells: string[] }> = ({ cells }) => (\r\n  <tr>\r\n    {cells.map((cell, index) => (\r\n      <td key={index}>{cell}</td>\r\n    ))}\r\n  </tr>\r\n);\r\n\r\nconst TableFooter: React.FC<{ footer?: string }> = ({ footer }) => (\r\n  <tfoot>\r\n    <tr>\r\n      <td>{footer}</td>\r\n    </tr>\r\n  </tfoot>\r\n);\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  header,\r\n  rows,\r\n  footer,\r\n  backgroundColor,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <StyledTable backgroundColor={backgroundColor} disabled={disabled}>\r\n      {header !== undefined && <TableHeader header={header} />}\r\n\r\n      <tbody>\r\n        {rows?.map((row, index) => (\r\n          <TableRow key={index} cells={row.cells} />\r\n        ))}\r\n      </tbody>\r\n      {footer !== undefined && <TableFooter footer={footer} />}\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"names":[],"sourceRoot":""}